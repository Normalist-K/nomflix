{"version":3,"sources":["assets/noPosterSmall.png","Component/Header.js","Component/Section.js","Component/Loader.js","Component/Message.js","Component/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Component/Router.js","Component/GlobalStyles.js","Component/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","upComing","popular","error","loading","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","airingToday","topRated","tvDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","componentDidMount","a","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","pastTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b041f0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.efe1557d.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? '#b33939' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === '/'}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === '/tv'}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === '/search'}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏳\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.05s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.05s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n  position: relative;\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(225, 225, 225, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300/${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Component/Section\";\nimport Loader from \"Component/Loader\";\nimport Message from \"Component/Message\";\nimport Poster from \"../../Component/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upComing && upComing.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upComing.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upComing: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'd367713322fbd7b41ca515c20dbe05ac',\n    language: 'en-US',\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get('movie/now_playing'),\n  upComing: () => api.get('movie/upcoming'),\n  popular: () => api.get('movie/popular'),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: { append_to_response: 'videos' },\n    }),\n  search: term =>\n    api.get('search/movie', {\n      params: { query: encodeURIComponent(term) },\n    }),\n};\n\nexport const tvApi = {\n  airingToday: () => api.get('tv/airing_today'),\n  popular: () => api.get('tv/popular'),\n  topRated: () => api.get('tv/top_rated'),\n  tvDetail: id =>\n    api.get(`tv/${id}`, {\n      params: { append_to_response: 'videos' },\n    }),\n  search: term =>\n    api.get('search/tv', {\n      params: { query: encodeURIComponent(term) },\n    }),\n};\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upComing: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upComing },\n      } = await moviesApi.upComing();\n      const {\n        data: { results: popular },\n      } = await moviesApi.nowPlaying();\n      // throw Error();\n      this.setState({\n        nowPlaying,\n        upComing,\n        popular,\n      });\n    } catch {\n      this.setState({ error: \"Can't find movies information.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upComing={upComing}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Component/Section\";\nimport Loader from \"Component/Loader\";\nimport Message from \"Component/Message\";\nimport Poster from \"Component/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ airingToday, popular, topRated, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated TV Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular TV Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  airingToday: PropTypes.array,\n  popular: PropTypes.array,\n  topRated: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from './TVContainer';\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    airingToday: null,\n    popular: null,\n    topRated: null,\n    error: null,\n    loading: true,\n  };\n\n  componentDidMount = async () => {\n    try {\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      // throw Error();\n      this.setState({\n        airingToday,\n        popular,\n        topRated,\n      });\n    } catch {\n      this.setState({ error: \"Can't find movies information.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { airingToday, popular, topRated, error, loading } = this.state;\n    return (\n      <TVPresenter\n        airingToday={airingToday}\n        popular={popular}\n        topRated={topRated}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Component/Section\";\nimport Loader from \"Component/Loader\";\nimport Message from \"../../Component/Message\";\nimport Poster from \"../../Component/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  pastTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text={`Nothing Found for: ${pastTerm}`} color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  pastTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    pastTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      // throw Error();\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults, pastTerm: searchTerm });\n    } catch {\n      this.setState({ error: \"Can't find movies information.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const {\n      movieResults,\n      tvResults,\n      searchTerm,\n      pastTerm,\n      error,\n      loading,\n    } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        pastTerm={pastTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Component/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(2px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 2px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 20px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>∙</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>∙</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `,\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.tvDetail(parsedId));\n      }\n      this.setState({ result });\n    } catch {\n      this.setState({ error: \"Can't find anythings.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    console.log(this.state.result);\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Header from \"Component/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        {/* <Route path='/tv/popular' render={() => <h1>popular</h1>} /> */}\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n  ${reset};\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 12px;\n    background-color: rgba(20, 20, 20, 1);\n    color: white;\n    padding-top: 50px;\n  }\n`;\n\nexport default globalStyles;\n","import React, { Component } from 'react';\nimport Router from 'Component/Router';\nimport GlobalStyles from 'Component/GlobalStyles';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Component/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}